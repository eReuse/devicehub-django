services:
  devicehub-django:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    init: true
    image: farga.pangea.org/ereuse/devicehub-django:latest
    build:
      context: .
      dockerfile: docker/devicehub-django.Dockerfile
    environment:
      - DEBUG=${DEBUG:-false}
      - DEVICEHUB_HOST=${DEVICEHUB_HOST:-localhost}
      - PORT=${DEVICEHUB_PORT:-8000}
      - ALLOWED_HOSTS=${DEVICEHUB_ALLOWED_HOSTS:-$DEVICEHUB_HOST}
      - DEMO=${DEMO:-false}
      - DEMO_IDHUB_DOMAIN=${DEMO_IDHUB_DOMAIN:-}
      - DEMO_IDHUB_PREDEFINED_TOKEN=${IDHUB_PREDEFINED_TOKEN:-}
      - PREDEFINED_TOKEN=${PREDEFINED_TOKEN:-}
      - DPP=${DPP:-false}
      - DB_TYPE=${DEVICEHUB_DB_TYPE:-postgres}
      - TIME_ZONE=${TIME_ZONE:-UTC}
      - DB_HOST=${DB_HOST:-devicehub-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    # TODO manage volumes dev vs prod
    volumes:
      - ${DEVICEHUB_VOLUME:-.:/opt/devicehub}
    ports:
      - ${DEVICEHUB_PORT:-8000}:${DEVICEHUB_PORT:-8000}
    depends_on:
      devicehub-postgres:
        condition: service_healthy
        restart: true

  devicehub-postgres:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    image: postgres:17
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - DEVICEHUB_POSTGRES_DATA:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      start_period: 1s
      interval: 1s
      timeout: 10s
      retries: 10

  devicehub-rproxy:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    profiles: [rproxy]
    build:
      context: .
      dockerfile: ./docker/nginx.Dockerfile
    environment:
      - WEBSERVER_HOST=${DEVICEHUB_HOST}
      - APP_HOST=devicehub-django:${DEVICEHUB_PORT}
      - FAKE_HTTP_CERT=${DEVICEHUB_FAKE_HTTP_CERT}
    ports:
    - "80:80"
    - "443:443"
    volumes:
      - type: bind
        source: docker/nginx/app.template
        target: /etc/nginx/conf.d/app.template
      # TODO static nginx files
      #- static:/path/to/static/files:ro
      - certbot-www:/var/www/certbot
      - ${DEVICEHUB_ROOT_DIR}/${DEVICEHUB_DOCKER_DIR}/${DEVICEHUB_HOST}/certbot/conf:/etc/letsencrypt
    depends_on:
      - devicehub-django

  certbot:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    profiles: [letsencrypt]
    container_name: certbot
    image: certbot/certbot
    volumes:
      # TODO IDHUB_DOMAIN?
      #
      - ${DEVICEHUB_ROOT_DIR}/${DEVICEHUB_DOCKER_DIR}/${DEVICEHUB_HOST}/certbot/conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    entrypoint: /bin/sh -c "trap exit TERM; while true; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done;"
    depends_on:
      - devicehub-rproxy











  idhub:
    # https://docs.docker.com/compose/how-tos/profiles/
    init: true
    profiles: [idhub]
    image: farga.pangea.org/ereuse/idhub:stable
    environment:
      - DOMAIN=${IDHUB_DOMAIN:-localhost}
      - ALLOWED_HOSTS=${IDHUB_ALLOWED_HOSTS:-$IDHUB_DOMAIN}
      - DEBUG=${IDHUB_DEBUG:-true}
      - DEMO=${IDHUB_DEMO:-true}
      - IDHUB_DB_TYPE=${IDHUB_DB_TYPE:-postgres}
      - INITIAL_ADMIN_EMAIL=${IDHUB_ADMIN_EMAIL}
      - INITIAL_ADMIN_PASSWORD=${IDHUB_ADMIN_PASSWD}
      - CREATE_TEST_USERS=${IDHUB_CREATE_TEST_USERS:-true}
      - ENABLE_EMAIL=${IDHUB_ENABLE_EMAIL:-true}
      - ENABLE_2FACTOR_AUTH=${IDHUB_ENABLE_2FACTOR_AUTH:-true}
      - ENABLE_DOMAIN_CHECKER=${IDHUB_ENABLE_DOMAIN_CHECKER:-true}
      - PREDEFINED_TOKEN=${IDHUB_PREDEFINED_TOKEN:-}
      - SECRET_KEY=${IDHUB_SECRET_KEY:-publicsecretisnotsecureVtmKBfxpVV47PpBCF2Nzz2H6qnbd}
      - STATIC_ROOT=${IDHUB_STATIC_ROOT:-/static/}
      - MEDIA_ROOT=${IDHUB_MEDIA_ROOT:-/media/}
      - PORT=${IDHUB_PORT:-9001}
      - DEFAULT_FROM_EMAIL=${IDHUB_DEFAULT_FROM_EMAIL}
      - EMAIL_HOST=${IDHUB_EMAIL_HOST}
      - EMAIL_HOST_USER=${IDHUB_EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${IDHUB_EMAIL_HOST_PASSWORD}
      - EMAIL_PORT=${IDHUB_EMAIL_PORT}
      - EMAIL_USE_TLS=${IDHUB_EMAIL_USE_TLS}
      - EMAIL_BACKEND=${IDHUB_EMAIL_BACKEND}
      - SUPPORTED_CREDENTIALS=${IDHUB_SUPPORTED_CREDENTIALS:-}
      - SYNC_ORG_DEV=${IDHUB_SYNC_ORG_DEV}
      - DB_PORT=${IDHUB_POSTGRES_PORT:-5432}
      - DB_HOST=${IDHUB_POSTGRES_HOST:-idhub-postgres}
      - DB_NAME=${IDHUB_POSTGRES_NAME}
      - DB_USER=${IDHUB_POSTGRES_USER}
      - DB_PASSWORD=${IDHUB_POSTGRES_PASSWORD}
    ports:
      - ${IDHUB_PORT:-9001}:${IDHUB_PORT:-9001}
    volumes:
      - ${IDHUB_VOLUME:-.:/opt/idhub}
    depends_on:
      idhub-postgres:
        condition: service_healthy
        restart: true

  idhub-postgres:
    profiles: [idhub]
    image: postgres:17
    environment:
      - POSTGRES_DB=${IDHUB_POSTGRES_NAME}
      - POSTGRES_USER=${IDHUB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${IDHUB_POSTGRES_PASSWORD}
      # TODO probablemente no hace falta, si no afecta borrar 'ports'
      #ports:
      #  - 5432:5432
    volumes:
      - IDHUB_POSTGRES_DATA:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${IDHUB_POSTGRES_USER} -d ${IDHUB_POSTGRES_NAME}"]
      start_period: 1s
      interval: 1s
      timeout: 10s
      retries: 10


volumes:
  IDHUB_DATA:
  IDHUB_POSTGRES_DATA:
  DEVICEHUB_DATA:
  DEVICEHUB_POSTGRES_DATA:
  certbot-www:

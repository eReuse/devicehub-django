"""
Django settings for dhub project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
import xapian

from pathlib import Path
from django.contrib.messages import constants as messages
from decouple import config, Csv

from utils.logger import CustomFormatter

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1p8rs@qf$$l^!vsbetagojw23kw@1ez(qi8^(s0t&#7!wyh!l3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEVICEHUB_DEBUG', default=False, cast=bool)

DEVICEHUB_HOST = config("DEVICEHUB_HOST")
assert DEVICEHUB_HOST not in [None, ''], "DEVICEHUB_HOST var is MANDATORY"

ALLOWED_HOSTS = config('DEVICEHUB_ALLOWED_HOSTS', default=DEVICEHUB_HOST, cast=Csv())
assert DEVICEHUB_HOST in ALLOWED_HOSTS, f"DEVICEHUB_HOST {DEVICEHUB_HOST} is not in ALLOWED_HOSTS {ALLOWED_HOSTS}"

CSRF_TRUSTED_ORIGINS = config('DEVICEHUB_CSRF_TRUSTED_ORIGINS', default=f'https://{DEVICEHUB_HOST}', cast=Csv())


INITIAL_ADMIN_EMAIL = config("DEVICEHUB_INITIAL_ADMIN_EMAIL", default='admin@example.org')
INITIAL_ADMIN_PASSWORD = config("DEVICEHUB_INITIAL_ADMIN_PASSWORD", default='1234')

EVIDENCES_DIR = config("DEVICEHUB_EVIDENCES_DIR", default=os.path.join(BASE_DIR, "db"))


# Application definition


LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

INSTALLED_APPS = [
    # "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django_extensions',
    'django_bootstrap5',
    'django_tables2',
    "login",
    "user",
    "device",
    "evidence",
    "lot",
    "dashboard",
    "action",
    "admin",
    "api",
    "dhemail",
]

DPP = config("DEVICEHUB_DPP", default=False, cast=bool)

if DPP:
    INSTALLED_APPS.extend(["dpp", "did"])

DJANGO_TABLES2_TEMPLATE = "django_tables2/bootstrap5.html"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.middleware.locale.LocaleMiddleware',
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "dhub.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.i18n",
            ],

            'libraries':{
                'get_language_code': 'dashboard.templatetags.language_code',
            }

        },
    },
]

WSGI_APPLICATION = "dhub.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db/db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = config("DEVICEHUB_TIME_ZONE", default="UTC")

USE_I18N = True

USE_TZ = False

if TIME_ZONE == "UTC":
    USE_TZ = True

USE_L10N = True
LANGUAGES = [
    ('es', 'español'),
    ('en', 'english'),
    ('ca', 'català'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATIC_ROOT = config('DEVICEHUB_STATIC_ROOT', default="static")
MEDIA_ROOT = config('DEVICEHUB_MEDIA_ROOT', default="upload")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = 'user.User'

MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_REDIRECT_URL = 'dashboard:dashboard'
LOGOUT_REDIRECT_URL = '/'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    'formatters': {
        'colored': {
            '()': CustomFormatter,
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "colored"
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "DEBUG",
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,  # Asegura que no se reenvíen a los manejadores raíz
        },
        "django.request": {
            "handlers": ["console"],
            "level": "ERROR",
            "propagate": False,
        },
    }
}

SNAPSHOT_PATH="/tmp/"
DATA_UPLOAD_MAX_NUMBER_FILES = 1000
COMMIT = config('DEVICEHUB_COMMIT', default='')

# DLT SETTINGS
TOKEN_DLT = config("DEVICEHUB_API_DLT_TOKEN", default=None)
API_DLT = config("DEVICEHUB_API_DLT", default=None)
API_RESOLVER = config("DEVICEHUB_API_RESOLVER", default=None)
ID_FEDERATED = config("DEVICEHUB_ID_FEDERATED", default=None)

# EMAIL
INITIAL_ADMIN_EMAIL = config("DEVICEHUB_INITIAL_ADMIN_EMAIL", default='admin@example.org')
DEFAULT_FROM_EMAIL = config(
    'DEVICEHUB_DEFAULT_FROM_EMAIL', default='webmaster@localhost')
EMAIL_HOST = config('DEVICEHUB_EMAIL_HOST', default='localhost')
EMAIL_HOST_USER = config('DEVICEHUB_EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('DEVICEHUB_EMAIL_HOST_PASSWORD', default='')
EMAIL_PORT = config('DEVICEHUB_EMAIL_PORT', default=25, cast=int)
EMAIL_USE_TLS = config('DEVICEHUB_EMAIL_USE_TLS', default=False, cast=bool)
EMAIL_BACKEND = config('DEVICEHUB_EMAIL_BACKEND', default='django.core.mail.backends.smtp.EmailBackend')
EMAIL_FILE_PATH = config('DEVICEHUB_EMAIL_FILE_PATH', default='/tmp/app-messages')
ENABLE_EMAIL = config('DEVICEHUB_ENABLE_EMAIL', default=True, cast=bool)
